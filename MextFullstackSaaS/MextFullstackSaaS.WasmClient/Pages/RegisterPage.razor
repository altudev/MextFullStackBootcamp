@page "/register"
@layout AuthLayout
@using MextFullstackSaaS.Application.Common.Models
@using MextFullstackSaaS.Application.Features.UserAuth.Commands.Register
@using MextFullstackSaaS.WasmClient.Services
@inject HttpClient HttpClient
@inject IToasterService ToasterService
@inject NavigationManager NavigationManager

@if (isAuthenticated)
{
    <h2>You've already been authenticated. Please log out first to register with another account.</h2>
    <button class="btn btn-secondary" @onclick="@(() => NavigationManager.NavigateTo("/"))">Go to Homepage</button>
}
else
{
    <section class="from-[#FC354C] to-[#0072ff] min-h-screen bg-gradient-to-r py-10 sm:py-10 lg:py-10">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="mx-auto max-w-2xl text-center">
                <h2 class="text-3xl font-bold leading-tight text-white sm:text-4xl lg:text-5xl">Create Your Account</h2>
                <p class="mx-auto mt-4 max-w-xl text-base leading-relaxed text-gray-200">Register to get started</p>
                @if (isValidSubmit)
                {
                    <div role="alert" class="alert alert-success mt-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="shrink-0 h-6 w-6 stroke-current" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>
                        <span>Welcome! 👋 A verification email has been sent to your e-mail address! 🎉</span>
                    </div>
                }
            </div>
            <EditForm Model="command" FormName="register-form" OnValidSubmit="OnValidSubmit">
                <div class="relative mx-auto mt-8 max-w-md md:mt-10">
                    <div class="overflow-hidden rounded-md bg-white shadow-md">
                        <div class="px-4 py-6 sm:px-8 sm:py-7">
                            <div class="space-y-5">
                                <div>
                                    <label class="text-base font-medium text-gray-900"> First Name </label>
                                    <div class="relative mt-2.5 text-gray-400 focus-within:text-gray-600">
                                        <InputText @bind-Value="@command.FirstName" type="text" placeholder="Enter your first name" class="block w-full rounded-md border border-gray-200 bg-white py-4 pl-4 pr-4 text-black placeholder-gray-500 caret-blue-600 transition-all duration-200 focus:border-blue-600 focus:outline-none" />
                                    </div>
                                </div>
                                <div>
                                    <label class="text-base font-medium text-gray-900"> Last Name </label>
                                    <div class="relative mt-2.5 text-gray-400 focus-within:text-gray-600">
                                        <InputText @bind-Value="@command.LastName" type="text" placeholder="Enter your last name" class="block w-full rounded-md border border-gray-200 bg-white py-4 pl-4 pr-4 text-black placeholder-gray-500 caret-blue-600 transition-all duration-200 focus:border-blue-600 focus:outline-none" />
                                    </div>
                                </div>
                                <div>
                                    <label class="text-base font-medium text-gray-900"> Email Address </label>
                                    <div class="relative mt-2.5 text-gray-400 focus-within:text-gray-600">
                                        <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                            <svg class="h-5 w-5" fill="#31363F" height="24px" width="24px" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 75.294 75.294" xml:space="preserve">
                                            <g>
                                            <path d="M66.097,12.089h-56.9C4.126,12.089,0,16.215,0,21.286v32.722c0,5.071,4.126,9.197,9.197,9.197h56.9 c5.071,0,9.197-4.126,9.197-9.197V21.287C75.295,16.215,71.169,12.089,66.097,12.089z M61.603,18.089L37.647,33.523L13.691,18.089 H61.603z M66.097,57.206h-56.9C7.434,57.206,6,55.771,6,54.009V21.457l29.796,19.16c0.04,0.025,0.083,0.042,0.124,0.065 c0.043,0.024,0.087,0.047,0.131,0.069c0.231,0.119,0.469,0.215,0.712,0.278c0.025,0.007,0.05,0.01,0.075,0.016 c0.267,0.063,0.537,0.102,0.807,0.102c0.001,0,0.002,0,0.002,0c0.002,0,0.003,0,0.004,0c0.27,0,0.54-0.038,0.807-0.102 c0.025-0.006,0.05-0.009,0.075-0.016c0.243-0.063,0.48-0.159,0.712-0.278c0.044-0.022,0.088-0.045,0.131-0.069 c0.041-0.023,0.084-0.04,0.124-0.065l29.796-19.16v32.551C69.295,55.771,67.86,57.206,66.097,57.206z" />
                                            </g>
                                        </svg>
                                        </div>
                                        <InputText @bind-Value="@command.Email" type="email" placeholder="Enter your email address" class="block w-full rounded-md border border-gray-200 bg-white py-4 pl-10 pr-4 text-black placeholder-gray-500 caret-blue-600 transition-all duration-200 focus:border-blue-600 focus:outline-none" />
                                    </div>
                                </div>
                                <div>
                                    <div class="flex items-center justify-between">
                                        <label for="" class="text-base font-medium text-gray-900"> Password </label>
                                    </div>
                                    <div class="relative mt-2.5 text-gray-400 focus-within:text-gray-600">
                                        <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                            <svg class="h-5 w-5" fill="#31363F" width="800px" height="800px" viewBox="0 0 32 32" id="icon" xmlns="http://www.w3.org/2000/svg">
                                                <defs>
                                                    <style>
                                                        .cls-1 {
                                                            fill: none;
                                                        }</style>
                                                </defs>
                                                <path d="M21,2a8.9977,8.9977,0,0,0-8.6119,11.6118L2,24v6H8L18.3881,19.6118A9,9,0,1,0,21,2Zm0,16a7.0125,7.0125,0,0,1-2.0322-.3022L17.821,17.35l-.8472.8472-3.1811,3.1812L12.4141,20,11,21.4141l1.3787,1.3786-1.5859,1.586L9.4141,23,8,24.4141l1.3787,1.3786L7.1716,28H4V24.8284l9.8023-9.8023.8472-.8474-.3473-1.1467A7,7,0,1,1,21,18Z" />
                                                <circle cx="22" cy="10" r="2" />
                                                <rect id="_Transparent_Rectangle_" data-name="&lt;Transparent Rectangle&gt;" class="cls-1" width="32" height="32" />
                                            </svg>
                                        </div>
                                        <InputText @bind-Value="@command.Password" type="password" placeholder="Enter your password" class="block w-full rounded-md border border-gray-200 bg-white py-4 pl-10 pr-4 text-black placeholder-gray-500 caret-blue-600 transition-all duration-200 focus:border-blue-600 focus:outline-none" />
                                    </div>
                                </div>
                                <div>
                                    <div class="flex items-center justify-between">
                                        <label for="" class="text-base font-medium text-gray-900"> Confirm Password </label>
                                    </div>
                                    <div class="relative mt-2.5 text-gray-400 focus-within:text-gray-600">
                                        <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                            <svg class="h-5 w-5" fill="#31363F" width="800px" height="800px" viewBox="0 0 32 32" id="icon" xmlns="http://www.w3.org/2000/svg">
                                                <defs>
                                                    <style>
                                                        .cls-1 {
                                                            fill: none;
                                                        }</style>
                                                </defs>
                                                <path d="M21,2a8.9977,8.9977,0,0,0-8.6119,11.6118L2,24v6H8L18.3881,19.6118A9,9,0,1,0,21,2Zm0,16a7.0125,7.0125,0,0,1-2.0322-.3022L17.821,17.35l-.8472.8472-3.1811,3.1812L12.4141,20,11,21.4141l1.3787,1.3786-1.5859,1.586L9.4141,23,8,24.4141l1.3787,1.3786L7.1716,28H4V24.8284l9.8023-9.8023.8472-.8474-.3473-1.1467A7,7,0,1,1,21,18Z" />
                                                <circle cx="22" cy="10" r="2" />
                                                <rect id="_Transparent_Rectangle_" data-name="&lt;Transparent Rectangle&gt;" class="cls-1" width="32" height="32" />
                                            </svg>
                                        </div>
                                        <InputText @bind-Value="@command.ConfirmPassword" type="password" placeholder="Enter your password" class="block w-full rounded-md border border-gray-200 bg-white py-4 pl-10 pr-4 text-black placeholder-gray-500 caret-blue-600 transition-all duration-200 focus:border-blue-600 focus:outline-none" />
                                    </div>
                                </div>
                                <div>
                                    @if (isLoading)
                                    {
                                        <button disabled="disabled" type="submit" class="inline-flex w-full items-center justify-center rounded-md bg-gray-500 px-4 py-4 text-base font-semibold text-white transition-all duration-200 hover:opacity-90 focus:outline-none">Loading...</button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="inline-flex w-full items-center justify-center rounded-md bg-gradient-to-r from-cyan-400 to-pink-600 px-4 py-4 text-base font-semibold text-white transition-all duration-200 hover:opacity-90 focus:outline-none">Register</button>
                                    }
                                </div>
                                <div>
                                    @if (isLoading)
                                    {
                                        <button disabled="disabled" class="inline-flex w-full items-center justify-center rounded-md bg-gray-500 px-4 py-4 text-base font-semibold text-white transition-all duration-200 hover:opacity-90 focus:outline-none">
                                            <svg class="mr-2 h-5 w-5" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="google" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 488 512">
                                                <path fill="currentColor" d="M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z"></path>
                                            </svg>
                                            Loading...
                                        </button>
                                    }
                                    else
                                    {
                                        <button @onclick="HandleGoogleLogin" class="inline-flex w-full items-center justify-center rounded-md bg-gray-900 px-4 py-4 text-base font-semibold text-white transition-all duration-200 hover:opacity-90 focus:outline-none">
                                            <svg class="mr-2 h-5 w-5" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="google" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 488 512">
                                                <path fill="currentColor" d="M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z"></path>
                                            </svg>
                                            Sign in with Google
                                        </button>
                                    }

                                </div>
                                <div class="text-center">
                                    <p class="text-base text-gray-600 cursor-pointer" @onclick="@(()=>NavigationManager.NavigateTo("/login"))">Already have an account? <a class="font-medium text-indigo-500 transition-all duration-200 hover:text-indigo-600 hover:underline">Log in</a></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </section>
}

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private bool isAuthenticated = false;
    private UserAuthRegisterCommand command = new UserAuthRegisterCommand();
    private bool isLoading = false;
    private bool isValidSubmit = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var authState = await authenticationStateTask;

        isAuthenticated = authState.User.Identity.IsAuthenticated;

    }

    private async Task OnValidSubmit()
    {
        try
        {
            isLoading = true;

            var response = await HttpClient.PostAsJsonAsync("UsersAuth/register", command);

            if (response.IsSuccessStatusCode)
            {
                var responseDto = await response.Content.ReadFromJsonAsync<ResponseDto<JwtDto>>();

                ToasterService.ShowSuccess(responseDto.Message);

                isValidSubmit = true;

                command = new UserAuthRegisterCommand();
            }
            else
            {
                ToasterService.ShowError($"Beklenmedik bir hata olustu. Response Code:{response.StatusCode}");
            }

        }
        catch (Exception e)
        {
            ToasterService.ShowError(e.Message);
            isLoading = false;
        }
        finally
        {
            isLoading = false;
        }
    }
    
    // Handle Google sign-in
    private void HandleGoogleLogin()
    {
        NavigationManager.NavigateTo("https://localhost:7281/api/UsersAuth/signin-google-start");
    }
}
